name: "Build & Release"

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]  # Run builds on both Windows and macOS

    steps:
      - uses: actions/checkout@v3

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      # Cache Flutter build output to speed up subsequent builds
      - name: Cache Flutter build
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build/
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Install Java for building Android
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      # Build APK (with ABI splitting for smaller APKs)
      - name: Build APK
        run: flutter build apk --release --split-per-abi
        if: runner.os == 'windows' || runner.os == 'ubuntu'  # Android build for Windows and Ubuntu only

      # Build iOS without code signing (macOS only)
      - name: Build iOS
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
        if: runner.os == 'macos'  # Only run for macOS

      # Push to Releases
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.DEPLOY_TOKEN }}

## only windows
# name: "Build & Release"

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     name: Build & Release
#     runs-on: windows-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"
#           architecture: x64

#       # Cache Flutter build output to speed up subsequent builds
#       - name: Cache Flutter build
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.pub-cache
#             build/
#           key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-flutter-

#       - name: Install Java
#         uses: actions/setup-java@v3
#         with:
#           distribution: "zulu"
#           java-version: "17"

#       # Build APK (with ABI splitting for smaller APKs)
#       - name: Build APK
#         run: flutter build apk --release --split-per-abi

#       # Build iOS without code signing
#       - name: Build iOS
#         run: |
#           flutter build ios --no-codesign
#           cd build/ios/iphoneos
#           mkdir Payload
#           cd Payload
#           ln -s ../Runner.app
#           cd ..
#           zip -r app.ipa Payload

#       - name: Push to Releases
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
#           tag: v1.0.${{ github.run_number }}
#           token: ${{ secrets.DEPLOY_TOKEN }}


# # # cd.yml - CD Workflow for  Main Branch
# # on:
# #   push:
# #     branches:
# #       - main

# # name: "Build & Release"
# # jobs:
# #   build:
# #     name: Build & Release
# #     runs-on: macos-latest
# #     steps:
# #       - uses: actions/checkout@v3
# #       - uses: actions/setup-java@v3
# #         with:
# #           distribution: "zulu"
# #           java-version: "17"
# #       - uses: subosito/flutter-action@v2
# #         with:
# #           channel: "stable"
# #           architecture: x64

# #       - run: flutter build apk --release --split-per-abi
# #       - run: |
# #           flutter build ios --no-codesign
# #           cd build/ios/iphoneos
# #           mkdir Payload
# #           cd Payload
# #           ln -s ../Runner.app
# #           cd ..
# #           zip -r app.ipa Payload
# #       - name: Push to Releases
# #         uses: ncipollo/release-action@v1
# #         with:
# #           artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
# #           tag: v1.0.${{ github.run_number }}
# #           token: ${{ secrets.DEPLOY_TOKEN }}

