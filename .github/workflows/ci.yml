name: "CI Workflow"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '*'  # Trigger CI on all branches, feel free to limit it to specific branches like main, development, etc.

jobs:
  ci:
    name: Run CI
    runs-on: ${{ matrix.os }}  # Use matrix for cross-platform support (windows, macos, ubuntu)
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]  # Runs the workflow on Windows, macOS, and Ubuntu

    steps:
      - uses: actions/checkout@v3

      # Create mock .env file (if you need it in CI)
      - name: Create mock .env file
        run: echo "GOOGLE_MAP_API_KEY=your_mock_api_key" > Frontend/.env
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      # Cache Flutter dependencies to speed up future runs
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('Frontend/**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      # Cache Flutter build outputs to speed up future builds (optional)
      - name: Cache Flutter build outputs
        uses: actions/cache@v3
        with:
          path: |
            Frontend/build/
            Frontend/.dart_tool/
          key: ${{ runner.os }}-flutter-build-${{ hashFiles('Frontend/**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-build-
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      - name: Get Dependencies
        run: flutter pub get --no-verify
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      - name: Run Analyzer (with no fatal warnings)
        run: flutter analyze --no-fatal-warnings
        continue-on-error: true  # Allow the pipeline to continue if analyzer fails
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      - name: Run Unit Tests
        run: flutter test
        continue-on-error: true  # Allow the pipeline to continue if tests fail
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      - name: Check Flutter Version
        run: flutter --version
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

      - name: Print Current Working Directory (Debugging)
        run: pwd  # Helps to see where the workflow is running (for debugging purposes)
        working-directory: Frontend  # Specify that this should run in the 'Frontend' directory


# name: "CI Workflow"

# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - '*'  # Trigger CI on all branches, feel free to limit it to specific branches like main, development, etc.

# jobs:
#   ci:
#     name: Run CI
#     runs-on: ${{ matrix.os }}  # Use matrix for cross-platform support (windows, macos, ubuntu)
#     strategy:
#       matrix:
#         os: [windows-latest, macos-latest, ubuntu-latest]  # Runs the workflow on Windows, macOS, and Ubuntu

#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"
#           architecture: x64

#       # Cache Flutter dependencies to speed up future runs
#       - name: Cache Flutter dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.pub-cache
#           key: ${{ runner.os }}-flutter-${{ hashFiles('Frontend/**/pubspec.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-flutter-

#       # Cache Flutter build outputs to speed up future builds (optional)
#       - name: Cache Flutter build outputs
#         uses: actions/cache@v3
#         with:
#           path: |
#             Frontend/build/
#             Frontend/.dart_tool/
#           key: ${{ runner.os }}-flutter-build-${{ hashFiles('Frontend/**/pubspec.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-flutter-build-

#       - name: Get Dependencies
#         run: flutter pub get
#         working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

#       - name: Run Analyzer
#         run: flutter analyze
#         working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

#       - name: Run Unit Tests
#         run: flutter test
#         working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

#       - name: Check Flutter Version
#         run: flutter --version
#         working-directory: Frontend  # Specify that this should run in the 'Frontend' directory

#       - name: Print Current Working Directory (Debugging)
#         run: pwd  # Helps to see where the workflow is running (for debugging purposes)
